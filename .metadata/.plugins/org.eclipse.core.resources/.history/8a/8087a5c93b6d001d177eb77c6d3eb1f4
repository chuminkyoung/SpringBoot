package models.file;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.PreparedStatementCreator;
import org.springframework.jdbc.support.GeneratedKeyHolder;
import org.springframework.jdbc.support.KeyHolder;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.stereotype.Component;

@Component
public class FileInfoDao {
	
	@Autowired
	private JdbcTemplate jdbcTemplate;
	
	public FileInfo register(FileInfo fileInfo) {	// 파일 등록
		KeyHolder keyHolder = new GeneratedKeyHolder();
		
		String sql = "INSERT INTO fileInfo (gid, fileName, fileType) VALUE (?, ?, ?)";
		jdbcTemplate.update(new PreparedStatementCreator() {

			@Override
			public PreparedStatement createPreparedStatement(Connection con) throws SQLException {
				PreparedStatement pstmt = con.prepareStatement(sql, new String[] {"id"});	// 증감번호
				pstmt.setString(1, fileInfo.getGid());
				pstmt.setString(2, fileInfo.getFileName());
				pstmt.setString(3, fileInfo.getFileType());
				
				return pstmt;
			}
			
		}, keyHolder);
		
		Number keyValue = keyHolder.getKey();
		long id = keyValue.longValue();	// 증감번호
		
		return get(id);
	}
	
	public FileInfo get(long id) {	// 파일 조회
		try {
			String sql = "SELECT * FROP fileInfo WHERE id = ?";
			FileInfo fileInfo = jdbcTemplate.queryForObject(sql, new RowMapper<FileInfo>() {

				@Override
				public FileInfo mapRow(ResultSet rs, int rowNum) throws SQLException {
					FileInfo fileInfo = new FileInfo();
					fileInfo.setId(rs.getLong("id"));
					fileInfo.setGid(rs.getString("gid"));
					fileInfo.setFileName(rs.getString("FileName"));
					return null;
				}
				
			}, id);
		}catch(Exception e) {
			return null;
		}
	}
	
	public List<FileInfo> gets(String gid) {	// 파일 목록
		
		return null;
	}
	
	public boolean remove(long id) {	// 파일 삭제
		
		return false;
	}
	
	public boolean remove(String gid) {	// 파일 한번에 삭제
		
		return false;
	}
}
